{"ast":null,"code":"import axios from 'axios';\nconst API_ROOT = 'localhost:8000/api/bears';\nconst token = localStorage.getItem(\"token\");\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Accept: \"application/json\",\n  Authorization: token\n};\nfetch(API_ROOT).then(response => response.json()).then(data => console.log(data));\n\nconst getAll = () => {\n  console.log('test');\n  const request = axios.get(API_ROOT, headers);\n  console.log(request.data);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll\n};","map":{"version":3,"sources":["C:/Users/mzoug/Documents/GitHub/BlockCovidWeb/src/api.js"],"names":["axios","API_ROOT","token","localStorage","getItem","headers","Accept","Authorization","fetch","then","response","json","data","console","log","getAll","request","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,QAAQ,GAAG,0BAAjB;AAGA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,MAAMC,OAAO,GAAG;AACZ,kBAAgB,kBADJ;AAEZC,EAAAA,MAAM,EAAE,kBAFI;AAGZC,EAAAA,aAAa,EAAEL;AAHH,CAAhB;AAMAM,KAAK,CAACP,QAAD,CAAL,CACGQ,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFhB;;AAKA,MAAMG,MAAM,GAAG,MAAM;AACjBF,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,QAAME,OAAO,GAAGhB,KAAK,CAACiB,GAAN,CAAUhB,QAAV,EAAmBI,OAAnB,CAAhB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACJ,IAApB;AACA,SAAOI,OAAO,CAACP,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACE,IAAlC,CAAP;AACH,CALD;;AAQA,eAAe;AAACG,EAAAA;AAAD,CAAf","sourcesContent":["import axios from 'axios'\r\nconst API_ROOT = 'localhost:8000/api/bears';\r\n\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n    Authorization: token,\r\n};\r\n\r\nfetch(API_ROOT)\r\n  .then(response => response.json())\r\n  .then(data => console.log(data));\r\n\r\n\r\nconst getAll = () => {\r\n    console.log('test')\r\n    const request = axios.get(API_ROOT,headers)\r\n    console.log(request.data)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default {getAll}\r\n"]},"metadata":{},"sourceType":"module"}